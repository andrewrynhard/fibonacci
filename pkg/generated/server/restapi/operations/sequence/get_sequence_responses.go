// Code generated by go-swagger; DO NOT EDIT.

package sequence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/andrewrynhard/fibonacci/pkg/generated/server/models"
)

// GetSequenceOKCode is the HTTP code returned for type GetSequenceOK
const GetSequenceOKCode int = 200

/*GetSequenceOK Expected response to a valid request

swagger:response getSequenceOK
*/
type GetSequenceOK struct {

	/*
	  In: Body
	*/
	Payload *models.Sequence `json:"body,omitempty"`
}

// NewGetSequenceOK creates GetSequenceOK with default headers values
func NewGetSequenceOK() *GetSequenceOK {

	return &GetSequenceOK{}
}

// WithPayload adds the payload to the get sequence o k response
func (o *GetSequenceOK) WithPayload(payload *models.Sequence) *GetSequenceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sequence o k response
func (o *GetSequenceOK) SetPayload(payload *models.Sequence) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSequenceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSequenceDefault unexpected error

swagger:response getSequenceDefault
*/
type GetSequenceDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSequenceDefault creates GetSequenceDefault with default headers values
func NewGetSequenceDefault(code int) *GetSequenceDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSequenceDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get sequence default response
func (o *GetSequenceDefault) WithStatusCode(code int) *GetSequenceDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get sequence default response
func (o *GetSequenceDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get sequence default response
func (o *GetSequenceDefault) WithPayload(payload *models.Error) *GetSequenceDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sequence default response
func (o *GetSequenceDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSequenceDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
