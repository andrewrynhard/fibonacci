apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "fibonacci.fullname" . }}
  labels:
    app: {{ template "fibonacci.name" . }}
    chart: {{ template "fibonacci.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fibonacci.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.metricsPort }}"
      labels:
        app: {{ template "fibonacci.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - serve
          - api
          - --api-port
          - "{{ .Values.service.apiPort }}"
          - --metrics-port
          - "{{ .Values.service.metricsPort }}"
          - --with-cache
          env:
          - name: REDIS_ENDPOINT
            value: fibonacci-redis-master.{{ .Release.Namespace }}.svc.cluster.local:6379
          ports:
            - name: api
              containerPort: {{ .Values.service.apiPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.service.metricsPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/healthz
              port: api
          readinessProbe:
            httpGet:
              path: /v1/healthz
              port: api
          resources:
{{ toYaml .Values.resources.api | indent 12 }}
        - name: ui
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - serve
            - ui
            - --ui-port
            - "{{ .Values.service.uiPort }}"
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: ui
              containerPort: {{ .Values.service.uiPort }}
              protocol: TCP
          resources:
{{ toYaml .Values.resources.ui | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
